# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from matplotlib.pyplot import title, xlabel, ylabel, grid, plot, show, savefig, legend, gca
import numpy as np
import sympy as sp
from math import pi


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(422, 162)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setObjectName("verticalLayout")
        self.fncEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.fncEdit.setObjectName("fncEdit")
        self.verticalLayout.addWidget(self.fncEdit)
        self.startEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.startEdit.setObjectName("startEdit")
        self.verticalLayout.addWidget(self.startEdit)
        self.stopEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.stopEdit.setObjectName("stopEdit")
        self.verticalLayout.addWidget(self.stopEdit)
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("pushButton")
        self.verticalLayout.addWidget(self.pushButton)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "нарисуй свой график"))
        MainWindow.setWindowIcon(QtGui.QIcon("icon.ico"))
        self.fncEdit.setText(_translate("MainWindow", "1/x"))
        self.startEdit.setText(_translate("MainWindow", "-10"))
        self.stopEdit.setText(_translate("MainWindow", "10"))
        self.pushButton.setText(_translate("MainWindow", "нарисовать"))


class Application(QtWidgets.QMainWindow, Ui_MainWindow):
    def __init__(self):
        super(Application, self).__init__()
        self.setupUi(MainWindow)
        self.pushButton.clicked.connect(self.app)

    def app(self):
        functions = self.fncEdit.text().split()
        a = int(self.startEdit.text())
        b = int(self.stopEdit.text())
        # Независимая (x) и зависимая (y) переменные
        x = np.linspace(a, b, 50)
        # Построение графика
        for function in functions:
            f = sp.sympify(function)  # перевод текста в понятный формат для sympy
            spX = sp.symbols("x")  # переменная x для sympy
            fnc = sp.lambdify(spX, f, 'numpy')  # создание функции для y
            y = fnc(x)
            plot(x, y, label = function)  # добавление графика с названием (для легенды) на плоскость

        ax = gca()

        # plot X - axis    
        ax.axhline(y=0, color='k')

        # plot Y - axis    
        ax.axvline(x=0, color='k')
        title('здесь могла быть ваша реклама')  # заголовок
        xlabel('x')  # ось абсцисс
        ylabel('y')  # ось ординат
        grid()  # включение отображение сетки
        legend()  # включение легенды
        savefig("plt.png")  # график в png файл
        show()  # вывод конечного результата

if __name__ == "__main__":
    import sys
    window = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    app = Application()
    MainWindow.show()
    sys.exit(window.exec_())
