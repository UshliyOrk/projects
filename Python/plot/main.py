# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'app.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from matplotlib.pyplot import title, xlabel, ylabel, grid, plot, show
import numpy as np
import sympy as sp
from math import pi

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(639, 168)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(520, 110, 93, 28))
        self.pushButton.setObjectName("pushButton")
        self.verticalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.verticalLayoutWidget.setGeometry(QtCore.QRect(10, 10, 491, 131))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.label_2 = QtWidgets.QLabel(self.verticalLayoutWidget)
        self.label_2.setObjectName("label_2")
        self.verticalLayout.addWidget(self.label_2)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.pushButton.setText(_translate("MainWindow", "ok"))
        self.label.setText(_translate("MainWindow", ""))
        self.label_2.setText(_translate("MainWindow", ""))

        self.application()

    def funcAll(self):
        m = Main()
        self.label.setText(str(m.search()))
        self.label_2.setText(str(m.funcArea()))
        m.funcPlot()

    def application(self):
        self.pushButton.clicked.connect(self.funcAll)

class Main:
    eps = 3
    a = -pi
    b = np.pi
    def g(self, x):
        try:
            y = np.sin(x)
        except:
            y = sp.sin(x)
        return y


    def f(self, x):
        try:
            y = np.cos(x)
        except:
            y = sp.cos(x)
        return y
    def search(self):
        self.l = []
        a = round(self.a * 10 ** self.eps)
        b = round(self.b * 10 ** self.eps)
        for x in range(a, b, 1):
            if round(self.f(x / 10 ** self.eps), self.eps) == round(self.g(x / 10 ** self.eps), self.eps):
                self.l.append(x / 10 ** self.eps)
        return self.l

    def funcArea(self):
        x = sp.Symbol('x')
        a1 = self.l[0]
        b1 = self.l[1]
        return sp.integrate(self.f(x) - self.g(x), (x, a1, b1))

    def funcPlot(self):
        # Независимая (x) и зависимая (y) переменные
        x = np.linspace(self.a, self.b, 50)
        y1 = self.g(x)
        y2 = self.f(x)
        # Построение графика
        title('здесь могла быть ваша реклама')  # заголовок
        xlabel('x')  # ось абсцисс
        ylabel('y')  # ось ординат
        grid()  # включение отображение сетки
        plot(x, y1, x, y2)  # построение графика
        show()



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
